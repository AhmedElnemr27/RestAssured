package UsersAPI;

import com.github.javafaker.Faker;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.apache.commons.io.FileUtils;
import org.testng.annotations.Test;
import org.testng.annotations.Test;
import io.restassured.response.Response;
import io.restassured.RestAssured;
import java.io.File;
import java.util.*;
import com.google.gson.Gson;

import java.io.File;
import java.io.IOException;
import java.sql.*;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

import static io.restassured.RestAssured.*;
import static io.restassured.matcher.RestAssuredMatchers.*;
import static org.hamcrest.Matchers.*;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;

public class ECO {

        private String documentIdString;
        private String EmailS;
        private String passwordS;
        public String authToken;
    public String otpValue;


    @Test (priority = 1)
        public void PostCitizenRegisterAPI() {
            Faker fake = new Faker();
            String documentId = fake.number().digits(7);
            String photoFilePath = "C:\\Users\\aalnimr\\Pictures\\Screenshots\\desktop-wallpaper-thomas-eye-thommy-peakyblinders.jpg";

            // Read the photo file as a byte array
            byte[] photoBytes = null;
            try {
                photoBytes = FileUtils.readFileToByteArray(new File(photoFilePath));
            } catch (IOException e) {
                e.printStackTrace();
                return;
            }

            given()
                    .contentType(ContentType.MULTIPART)
                    .multiPart("DocumentId", documentId)
                    .multiPart("Photo", new File(photoFilePath))
                    .multiPart("IsValidBiometric", "true")
                    .when()
                    .post("http://10.3.20.119:7017/citizen/register")
                    .then().log().all()
                    .assertThat().body("result", equalTo(true));

            this.documentIdString = documentId;
            System.out.println("DocumentId: " + documentIdString);
        }

        @Test(priority = 2)
         public void eeeiii() {
        Faker fake = new Faker();
        String firstName = fake.name().firstName();
        String lastName = fake.name().lastName();
        String email = fake.internet().emailAddress();
        LocalDate localDate = fake.date().between(Date.from(LocalDate.of(1970, 1, 1).atStartOfDay(ZoneId.systemDefault()).toInstant()), new Date()).toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        String dateOfBirth = localDate.toString();
        String mobileNumber = fake.number().digits(10);
        String genderCode = fake.options().option("M", "F");
        String nationalityCode = fake.options().option("DNK", "USA", "GBR");
      //  String password = fake.internet().password(8, 12, true, true);
      //  String confirmPassword = password;
        String address = fake.address().fullAddress();
        String phoneNumber = fake.number().digits(10);
        String Bpassword = "Asd@1230";

        given()
                .contentType(ContentType.JSON)
                .body("{" +
                        "\"firstName\":\"" + firstName + "\"," +
                        "\"lastName\":\"" + lastName + "\"," +
                        "\"email\":\"" + email + "\"," +
                        "\"dateOfBirth\":\"" + dateOfBirth + "\"," +
                        "\"mobileNumber\":\"" + mobileNumber + "\"," +
                        "\"genderCode\":\"" + genderCode + "\"," +
                        "\"nationalityCode\":\"" + nationalityCode + "\"," +
                        "\"documentId\":\"" + this.documentIdString + "\"," +
                        "\"password\":\"" + Bpassword + "\"," +
                        "\"confirmPassword\":\"" + Bpassword + "\"," +
                        "\"address\":\"" + address + "\"," +
                        "\"phoneNumber\":\"" + phoneNumber + "\"" +
                        "}")
                .when()
                .post("http://10.3.20.119:9010/Applicant/CreateApplicant")
                .then().log().all()
                .assertThat().body("message", equalTo("Applicant Created and otp sent"));

        System.out.println("DocumentId: " + this.documentIdString);
            System.out.println(email);
            this.EmailS = email;
            this.passwordS = Bpassword;
    }

    @Test(priority = 3)
    public void PostIssueLicense(){
            Faker fake = new Faker();
        String licensenumber = fake.number().digits(8);

        String requestBody = "{" +
                "\"documentId\":\"" + this.documentIdString + "\"," +
                "\"licenseCode\":\"" + "A1" + "\"," +
                "\"licenseNumber\":\"" + licensenumber + "\"," +
                "\"issuanceDate\":\"" + "2024-01-04T06:45:27.361Z" + "\"," +
                "\"expirationDate\":\"" + "2024-08-04T06:45:27.361Z" + "\"," +
                "\"isPenaltiesPaid\":" + true + "," +
                "\"isDrivingCourseCompleted\":" + true + "," +
                "\"isPaid\":" + true + "," +
                "\"isEligibleLicense\":" + true + "," +
                "\"paymentUrl\":\"" + "https://www.google.com" + "\"" +
                "}";

        given()
                .contentType(ContentType.JSON)
                .body(requestBody)
                .when()
                .post("http://10.3.20.119:7017/applicant/IssueLicense")
                .then()
                .log()
                .all();

    }

    @Test(priority = 6)
    public void loginAPI() {
        Response response = given()
                .header("ContentType", "application/json")
                .queryParams("email", this.EmailS, "password", this.passwordS)
                .when()
                .post("http://10.3.20.119:9010/Applicant/Login")
                .then()
                .log().all()
                .extract().response();

        // Check for successful login (adjust status code as needed)
        if (response.getStatusCode() == 200) {
            // Extract the token from the response
            String token = response.jsonPath().getString("result.token"); // Replace with actual path to token
            this.authToken = token; // Store token for later use
            System.out.println("Login successful, token: " + token);
        } else {
            // Handle login failure
            System.out.println("Login failed, status code: " + response.getStatusCode());
        }
    }

    @Test(priority = 4)
    public void database() throws SQLException {
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://10.3.20.119:1433;databaseName=Ecuador.eDLVR;user=sa;password=P@ssw0rd;");
            String email = this.EmailS;
            String query = "SELECT OTP FROM Applicant WHERE Email = '" + this.EmailS + "'";
            // the query : SELECT Applicant.OTP FROM Applicant WHERE Email = '4c8a696558d74b@beaconmessenger.com'

            Statement statement = connection.createStatement();
            ResultSet resultSet = statement.executeQuery(query);
            if (resultSet.next()) {
                String otp = resultSet.getString("OTP");
                System.out.println("OTP: " + otp);
                otpValue = otp;
            } else {
                System.out.println("No records found for the given email.");
            }

            resultSet.close();
            statement.close();
            connection.close();
    }
    @Test(priority = 5)
    public void otp() {
        String requestBody = "{" +
                "\"email\":\"" + this.EmailS + "\"," +
                "\"otp\":\"" + otpValue + "\"," +
                "\"isResetPassword\":" + false +  // Use boolean literal here
                "}";

        given()
                .contentType(ContentType.JSON)
                .body(requestBody)
                .when()
                .post("http://10.3.20.119:9010/Applicant/VerifyOtp")
                .then()
                .log()
                .all();
    }
@Test(priority = 8)
    public void details(){
        given().contentType(ContentType.JSON)
                .queryParam("licensecode","A1")
                .when().post("http://10.3.20.119:9010/RequestController/CheckLicensePrerequisites")
                .then().log().all();
}
@Test(priority = 7)
public void prequsites(){
        given().contentType(ContentType.JSON)
                .queryParam("licensecode","A1")
                .header("authorization","Bearer ", this.authToken)
                .when().get("http://10.3.20.119:9010/RequestController/CheckLicensePrerequisites")
                .then().extract().response();
}
    @Test(priority = 9)
    public void info() {
        Faker faje = new Faker();
        String libe = faje.number().digits(10);


        given()
                .contentType(ContentType.JSON)
                .body("{" +
                        "\"mobileNumber\":\"" + libe + "\"," +
                        "\"phoneNumber\":\"" + libe + "\"," +
                        "\"address\":\"" + "405 Tarra Underpass, South Rikki, TN" + "\"," +
                        "\"placeOfBirth\":\"" + "helwan" + "\"," +
                        "\"eyeColorCode\":\"" + "EC03" + "\"," +
                        "\"hairColorCode\":\"" + "HC08" + "\"," +
                        "\"heightInCM\":\"" + "180" + "\"," +
                        "\"weightInKG\":\"" + "80" + "\"," +
                        "\"cityCode\":\"" + "C002" + "\"," +
                        "\"stateCode\":\"" + "S001" + "\"," +
                        "\"postalCode\":\"" + "4234342" + "\"," +
                        "\"occupation\":\"" + "teller" + "\"" +
                        "}")
                .header("Authorization", "Bearer " + this.authToken) // Include the token in the header
                .when()
                .post("http://10.3.20.119:9010/Applicant/UpdateApplicantData")
                .then()
                .log().all();
    }
    @Test(priority = 10)
    public void bookAppointment() throws Exception {

        LocalDate tomorrow = LocalDate.now().plusDays(1);
        String appointmentDateFormat = tomorrow.format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));

        given().contentType(ContentType.JSON).header("authorization", "Bearer " + this.authToken)

                .body("{" +
                        "\"siteId\":\"" + "1059" + "\"," +
                        "\"Licensecode\":\"" + "A1" + "\"," +
                        "\"medicalRport\":\"" + "" + "\"," +
                        "\"appointmentDate\":\"" + appointmentDateFormat + "\"," +  "}")
                .when().post("http://10.3.20.119:9010/AppointmentController/BookDLRenewalRemoteAppointment")
                .then().log().all();
    }

    }



